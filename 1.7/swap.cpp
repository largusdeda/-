#include <iostream>

// Функция swap с буферной переменной
void bufSwap(int &a, int &b) {
  int tmp = a;
  a = b;
  b = tmp;
}

// Функция swap с XOR-обменом
// Преимущества: нет буферной переменной, эффективность, невозможность переполнения
// Недостатки: подходит только для логических и целочисленных типов, может быть медленная работа из-за распараллеливания, если передать одинаковые ссылки/указатели, то произойдет обнуление переменных
void xorSwap(int &a, int &b) {
  a = a ^ b;
  b = b ^ a;
  a = a ^ b;
}

// Функция swap с помощью арифметических операций
// Преимущества: нет буферной переменной
// Недостатки: возможно переполнение, подходит только для численных типов данных
void arithmSwap (int &a, int &b) {
  a = a + b;
  b = a - b;
  a = a - b;
}

int main() { 
  int a{5}, b{8};
  
  std::cout << "Функция swap с буферной переменной:" << std::endl;
  std::cout << "До обмена значениями: a = " << a << ", b = " << b << std::endl;
  bufSwap(a, b);
  std::cout << "После обмена значениями: a = " << a << ", b = " << b << std::endl;

  std::cout << "\nФункция swap с исключающим ИЛИ (XOR-обмен):" << std::endl;
  std::cout << "До обмена значениями: a = " << a << ", b = " << b << std::endl;
  xorSwap(a, b);
  std::cout << "После обмена значениями: a = " << a << ", b = " << b << std::endl;

  std::cout << "\nФункция swap с помощью арифметических операций:" << std::endl;
  std::cout << "До обмена значениями: a = " << a << ", b = " << b << std::endl;
  arithmSwap(a, b);
  std::cout << "После обмена значениями: a = " << a << ", b = " << b << std::endl;
    
  return EXIT_SUCCESS;
}
